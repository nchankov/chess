{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/bishop.js","webpack:///./src/board.js","webpack:///./src/figure.js","webpack:///./src/game.js","webpack:///./src/history.js","webpack:///./src/king.js","webpack:///./src/knight.js","webpack:///./src/main.js","webpack:///./src/pawn.js","webpack:///./src/queen.js","webpack:///./src/rook.js"],"names":["Bishop","moves","concat","getMoves","Figure","Board","p5","theme","direction","mode","game","Game","historyButtons","drawBoard","updateButtons","drawSelectedMoves","drawFigures","gameOver","message","drawGameOver","buttons","back","createButton","parent","mousePressed","history","bind","next","forward","top","offset","height","position","x","width","hasBack","attribute","removeAttribute","hasForward","background","tiles","black","white","y","i","fill","square","chars","push","textAlign","CENTER","labels","color","textSize","size","row","col","text","pop","mouseX","toFixed","mouseY","backgroundColor","over","reasonSize","textColor","translate","rect","figures","forEach","figure","drawFigure","drawSelectedFigure","drawSingleFigure","pos","image","images","sign","selected","strokeWeight","borderSize","stroke","borderColor","drawPossibleFigureMoves","move","figureAt","noStroke","circle","diameter","constructor","fig","score","points","select","canMoveTo","canMove","h","v","moveLength","isOnBoard","isKingInCheck","isInCheck","opposite_figure","originalPosition","figureByType","field","convertPosition","colors","History","setFigures","pawns","c","King","Queen","Knight","Rook","Pawn","store","filter","length","indexOf","charAt","Number","figureType","figuresByType","figureClass","getTurnColor","canSelect","initialPos","moved","isOnLastPosition","isGameOver","king","canBeProtected","getOppositeColor","isRepeating","f","clone","cloneFigures","from","to","slice","index","dir","Math","abs","repeating","lastMove","rep","canCastle","isCloseToOpponent","o","castle","first_move","rook","isEmpty","isProtected","j","canMoveThere","pp","board","attr","preload","loadImage","queen","bishop","knight","pawn","setup","canvas","createCanvas","window","dispatchEvent","Event","draw","frameRate","clickedOnBoard","getPosition","defaultValue","el","document","getElementById","getAttribute","overtaken","reachEnd","figureAtPos","getDirection","canAttack","getMove"],"mappings":"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","file":"chess.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","\"use strict\";\n\nimport Figure from './figure.js';\n\nclass Bishop extends Figure {\n\tsign = 'bishop';\n\tpoints = 3;\n\n\t/**\n\t * Figure moves\n\t *\n\t * @return {Array}\n\t */\n\tmoves() {\n\t\tlet moves = [];\n\t\tmoves = moves.concat(this.getMoves(1, 1));\n\t\tmoves = moves.concat(this.getMoves(1, -1));\n\t\tmoves = moves.concat(this.getMoves(-1, 1));\n\t\tmoves = moves.concat(this.getMoves(-1, -1));\n\t\treturn moves;\n\t}\n}\n\nexport default Bishop;","\"use strict\";\n\nimport Game from './game.js';\n/**\n * The class mainly draw the interface of the game, inclugind\n * the figures on the board\n */\nclass Board {\n\tpositions;\n\ttheme;\n\tgame;\n\n\tconstructor(p5, theme, direction, mode) {\n\t\tthis.direction = direction;\n\t\tthis.p5 = p5;\n\t\tthis.theme = theme;\n\t\tthis.game = new Game(direction);\n\t\tthis.game.mode = mode;\n\t\tthis.historyButtons();\n\t}\n\n\t/**\n\t * Draw everything on the board\n\t */\n\tdraw() {\n\t\tthis.drawBoard();\n\t\tthis.updateButtons();\n\t\tthis.drawSelectedMoves(this.game)\n\t\tthis.drawFigures(this.game);\n\t\t//Draw gameover screen\n\t\ttry {\n\t\t\tthis.game.gameOver();\n\t\t} catch (message) {\n\t\t\tthis.drawGameOver(message);\n\t\t}\n\t}\n\n\t/**\n\t * Construct history buttons\n\t * @return {[type]} [description]\n\t */\n\thistoryButtons() {\n\t\t//to be moves somewhere\n\t\tthis.buttons = {\n\t\t\tback: this.p5.createButton(' < ').parent('chess').mousePressed((function() {\n\t\t\t\tthis.game.history.back();\n\t\t\t\treturn this;\n\t\t\t}).bind(this)),\n\t\t\tnext: this.p5.createButton(' > ').parent('chess').mousePressed((function() {\n\t\t\t\tthis.game.history.forward();\n\t\t\t\treturn this;\n\t\t\t}).bind(this))\n\t\t};\n\t\t//position the buttons\n\t\tlet top = (this.theme.offset / 2 - this.buttons.back.height / 2);\n\t\tthis.buttons.back.position(\n\t\t\tthis.theme.offset, \n\t\t\ttop\n\t\t);\n\t\tthis.buttons.next.position(\n\t\t\tthis.buttons.back.x + this.buttons.back.width, \n\t\t\ttop\n\t\t);\n\t}\n\n\t/**\n\t * Update the buttons\n\t */\n\tupdateButtons() {\n\t\t//enable/disble buttons\n\t\tif (!this.game.history.hasBack()) {\n\t\t\tthis.buttons.back.attribute('disabled', true);\n\t\t} else {\n\t\t\tthis.buttons.back.removeAttribute('disabled');\n\t\t}\n\t\tif (!this.game.history.hasForward()) {\n\t\t\tthis.buttons.next.attribute('disabled', true);\n\t\t} else {\n\t\t\tthis.buttons.next.removeAttribute('disabled');\n\t\t}\n\t}\n\n\t/**\n\t * Draw the board and tiles on it\n\t *\n\t * @param  {Number} direction\n\t */\n\tdrawBoard() {\n\t\t//overall background\n\t\tthis.p5.background(this.theme.background);\n\n\t\tlet width = this.theme.tiles.width;\n\t\tlet black = this.theme.tiles.black;\n\t\tlet white = this.theme.tiles.white;\n\t\tlet offset = this.theme.offset;\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\t\tfor (let i = 0; i < 64; i++) {\n\t\t\tif (x >= 8) {\n\t\t\t\ty++;\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t\tthis.p5.fill(((x + y)%2) ? black : white);\n\t\t\tthis.p5.square((width * x) + offset, (width * y) + offset, width);\n\t\t\tx ++;\n\t\t}\n\t\t//Numbers & Letters on the board\n\t\tlet chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n\t\tthis.p5.push();\n\t\t\tthis.p5.textAlign(this.p5.CENTER, this.p5.CENTER);\n\t\t\tthis.p5.fill(this.theme.labels.color);\n\t\t\tthis.p5.textSize(this.theme.labels.size);\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tlet row = chars[i];\n\t\t\t\tlet col = 8 - i;\n\t\t\t\t//set chars at the bottom if the board is reversed\n\t\t\t\tif (this.direction < 0) {\n\t\t\t\t\trow = chars[7 - i];\n\t\t\t\t\tcol = i + 1;\n\t\t\t\t}\n\t\t\t\tthis.p5.text(\n\t\t\t\t\trow,\n\t\t\t\t\t(width * i + offset),\n\t\t\t\t\t(width * 8) + offset,\n\t\t\t\t\twidth,\n\t\t\t\t\twidth / 2\n\t\t\t\t);\n\t\t\t\tthis.p5.text(\n\t\t\t\t\tcol,\n\t\t\t\t\t((width * 8) + offset),\n\t\t\t\t\t(width * i + offset),\n\t\t\t\t\twidth / 2,\n\t\t\t\t\twidth\n\t\t\t\t);\n\t\t\t\t/*For debugging purposes*/\n\t\t\t\t//this.p5.text(('x' + i), (width * i + offset), 0, width, width / 2);\n\t\t\t\t//this.p5.text(('y' + i), 0, (width * i + offset), width / 2, width);\n\t\t\t\t/*For debugging purposes*/\n\t\t\t}\n\t\tthis.p5.pop();\n\t}\n\n\t/**\n\t * determine position based on the mouse click\n\t * e.g. it would return object with x and y\n\t */\n\tgetPosition() {\n\t\tlet width = this.theme.tiles.width;\n\t\tlet x = ((this.p5.mouseX) / width).toFixed(0) - 1;\n\t\tlet y = ((this.p5.mouseY) / width).toFixed(0) - 1;\n\n\t\tif (x < 0 || x > 7) {\n\t\t\tx = -1;\n\t\t}\n\t\tif (y < 0 || y > 7) {\n\t\t\ty = -1;\n\t\t}\n\t\treturn {x, y};\n\t}\n\n\t/**\n\t * Draw game over overlay\n\t *\n\t * @param  {String} message\n\t */\n\tdrawGameOver(message) {\n\t\tlet width = this.theme.tiles.width;\n\t\tlet offset = this.theme.offset;\n\t\t//\n\t\tlet backgroundColor = this.theme.over.background;\n\t\tlet size = this.theme.over.size;\n\t\tlet reasonSize = this.theme.over.reasonSize;\n\t\tlet textColor = this.theme.over.color;\n\t\tthis.p5.push();\n\t\t\t//draw overlay\n\t\t\tthis.p5.background(this.p5.color(0, 0, 0, 200));\n\t\t\tthis.p5.fill(this.p5.color(backgroundColor));\n\t\t\tthis.p5.translate(offset + width * 2, offset + width * 2);\n\t\t\tthis.p5.rect(0, 0, width * 4, width * 3);\n\t\t\t//write text gameover\n\t\t\tthis.p5.fill(textColor);\n\t\t\tthis.p5.textAlign(this.p5.CENTER, this.p5.CENTER);\n\t\t\tthis.p5.textSize(size);\n\t\t\tthis.p5.text(\n\t\t\t\t'Game Over',\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\twidth * 4,\n\t\t\t\twidth * 3\n\t\t\t);\n\t\t\tthis.p5.push();\n\t\t\t\tthis.p5.textSize(reasonSize);\n\t\t\t\tthis.p5.text(\n\t\t\t\t\tmessage,\n\t\t\t\t\t0,\n\t\t\t\t\t0,\n\t\t\t\t\twidth * 4,\n\t\t\t\t\twidth * 4\n\t\t\t\t);\n\t\t\tthis.p5.pop();\n\t\tthis.p5.pop();\n\t}\n\n\t/**\n\t * Draw all game figures\n\t */\n\tdrawFigures() {\n\t\tthis.game.figures.forEach((function(figure) {\n\t\t\tthis.drawFigure(figure);\n\t\t}).bind(this));\n\t}\n\n\t/**\n\t * Draw single figure\n\t * @param  {Figure} figure\n\t */\n\tdrawFigure(figure) {\n\t\tthis.drawSelectedFigure(figure);\n\t\tthis.drawSingleFigure(figure);\n\t}\n\n\t/**\n\t * Draw single figure\n\t * @param  {[type]} figure [description]\n\t * @return {[type]}        [description]\n\t */\n\tdrawSingleFigure(figure) {\n\t\tlet width = this.theme.tiles.width;\n\t\tlet offset = this.theme.offset;\n\t\tthis.p5.push();\n\t\t\tthis.p5.fill(figure.color);\n\t\t\tthis.p5.textSize(28);\n\t\t\tthis.p5.textAlign(this.p5.CENTER, this.p5.CENTER);\n\t\t\tthis.p5.translate(figure.pos.x * width + offset, figure.pos.y * width + offset);\n\t\t\tthis.p5.image(this.p5.images[figure.color][figure.sign], 0, 0, width, width);\n\t\tthis.p5.pop();\n\t}\n\n\t/**\n\t * Draw selected figure overlay\n\t *\n\t * @param  {Figure} figure\n\t * @return {[type]}        [description]\n\t */\n\tdrawSelectedFigure(figure) {\n\t\tlet width = this.theme.tiles.width;\n\t\tlet offset = this.theme.offset;\n\t\tif (!figure.selected) {\n\t\t\treturn;\n\t\t}\n\t\tthis.p5.push();\n\t\t\tthis.p5.translate(\n\t\t\t\tfigure.pos.x * width + offset,\n\t\t\t\tfigure.pos.y * width + offset\n\t\t\t);\n\t\t\tthis.p5.fill(this.theme.tiles.selected.background);\n\t\t\tthis.p5.strokeWeight(this.theme.tiles.selected.borderSize);\n\t\t\tthis.p5.stroke(this.theme.tiles.selected.borderColor);\n\t\t\tthis.p5.square(0,0,width);\n\t\tthis.p5.pop();\n\t}\n\n\t/**\n\t * Draw possible moves of the selected figure\n\t * @return {[type]} [description]\n\t */\n\tdrawSelectedMoves() {\n\t\tif (!this.game.selected) {\n\t\t\treturn;\n\t\t}\n\t\tthis.drawPossibleFigureMoves(this.game.selected);\n\t}\n\n\t/**\n\t * Draw all moves of the selected figure\n\t * @param  {Figure} figure\n\t */\n\tdrawPossibleFigureMoves(figure) {\n\t\tlet width = this.theme.tiles.width;\n\t\tlet offset = this.theme.offset;\n\t\tif (!figure.selected) {\n\t\t\treturn;\n\t\t}\n\t\tlet moves = figure.moves();\n\t\tmoves.forEach((function(move) {\n\t\t\tthis.p5.push();\n\t\t\t\tthis.p5.translate(move.x * width + offset + width / 2, move.y * width + offset + width / 2);\n\t\t\t\t//If there is a figure on the position\n\t\t\t\t//make big circle\n\t\t\t\tif (this.game.figureAt(move)) {\n\t\t\t\t\tthis.p5.fill(this.theme.tiles.moves.figure.background);\n\t\t\t\t\tthis.p5.noStroke();\n\t\t\t\t\tthis.p5.circle(0, 0, this.theme.tiles.moves.figure.diameter);\n\t\t\t\t} else {\n\t\t\t\t\t//this is the possible move marked as dot\n\t\t\t\t\tthis.p5.fill(this.theme.tiles.moves.background);\n\t\t\t\t\tthis.p5.noStroke();\n\t\t\t\t\tthis.p5.circle(0, 0, this.theme.tiles.moves.diameter);\n\t\t\t\t}\n\t\t\tthis.p5.pop();\n\t\t}).bind(this));\n\t}\n}\n\nexport default Board;","\"use strict\";\n\nclass Figure {\n\t/**\n\t * Type of the figues e.g. king, queen etc.\n\t * @type {String}\n\t */\n\tsign = \"n/a\";\n\n\t/**\n\t * figure position on the board\n\t * hold x and y which could be from 0 to 7\n\t * @type {Object}\n\t */\n\tpos = {};\n\n\t/**\n\t * figure selected\n\t * we will indicate that the figure is selected\n\t * and draw the moves on the board and allow it to move\n\t * @type {Boolean}\n\t */\n\tselected = false;\n\n\t/**\n\t * Color of the figure (black or white)\n\t * @type {String}\n\t */\n\tcolor = null;\n\n\t/**\n\t * how many points the figure counts\n\t * @type {Number}\n\t */\n\tpoints = 0;\n\n\t/**\n\t * how far the figure could go\n\t * this will determine the active moves of the piece\n\t * usually the lenght is all pieces in 1 direction e.g. from 0 to 7\n\t * but there are exceptions for example the king only one place from the\n\t * initial position\n\t * @type {Number}\n\t */\n\tmoveLength = 7;\n\n\t/**\n\t * instance of the current game\n\t * @type {Object}\n\t */\n\tgame = {};\n\n\t/**\n\t * Class constructor\n\t *\n\t * @param  {String} color\n\t * @param  {Object} pos\n\t * @param  {Object} game\n\t */\n\tconstructor(color, pos, game) {\n\t\tthis.color = color;\n\t\tthis.pos = pos;\n\t\tthis.game = game;\n\t}\n\n\t/**\n\t * Close the figure instance\n\t * @return {Object}\n\t */\n\tclone() {\n\t\tlet pos = {x: this.pos.x, y: this.pos.y};\n\t\treturn new this.constructor(this.color, pos, this.game);\n\t}\n\n\t/**\n\t * event listener which will notify the figure that the move is happened\n\t * so the figure specific can set some parameters.\n\t * example a pawn can move 2 spaces fron only on it's first move\n\t *\n\t * @param {Object} pos\n\t */\n\tmoved(pos) {\n\t\tlet fig = this.game.figureAt(pos);\n\t\tif (fig) {\n\t\t\tthis.game.score[this.color] += fig.points;\n\t\t\tthis.game.delete(fig);\n\t\t}\n\t\tthis.pos = pos;\n\t\tthis.selected = false;\n\t}\n\n\t/**\n\t * show possible moves from the current position\n\t *\n\t * @return {Array}\n\t */\n\tmoves() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Move selected figure to the new position\n\t * @param  {Object} pos\n\t * @return {Boolean}\n\t */\n\tmove(pos) {\n\t\tgame.select(this.pos);\n\t\tif (this.canMoveTo(pos) && game.move(pos)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check if the figure could move to the specified position\n\t * based on it's moves\n\t *\n\t * @param  {Object} pos\n\t * @return {Boolean}\n\t */\n\tcanMoveTo(pos) {\n\t\tlet canMove = false;\n\t\tlet moves = this.moves();\n\t\tmoves.forEach(function(move) {\n\t\t\tif (move.x == pos.x && move.y == pos.y) {\n\t\t\t\tcanMove = true;\n\t\t\t}\n\t\t});\n\t\treturn canMove;\n\t}\n\n\t/**\n\t * Explore directional moves e.g. with horizontal and vertical\n\t * you could determine which direction\n\t * to explore. e.g.\n\t * horizontal = 1|-1 and vertival = 0 horizontal\n\t * horizontal = 0 and vertical = 1|-1 will explore vertival direction\n\t * horizontal = 1|-1 and vertival = 1|-1 will explore diagonals\n\t *\n\t * @param  {Number} h could be -1, 0, 1\n\t * @param  {Number} v could be -1, 0, 1\n\t * @return {Array}\n\t */\n\tgetMoves(h, v) {\n\t\tlet moves = [];\n\t\tlet pos;\n\t\tlet figure;\n\t\tfor(let i = 1; i <= this.moveLength; i++) {\n\t\t\tpos = {x: this.pos.x + h * i, y: this.pos.y + v * i};\n\t\t\t//if the position is not on the board stop\n\t\t\tif (!this.isOnBoard(pos)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//there is a figure on the position which is on the same color\n\t\t\tfigure = this.game.figureAt(pos);\n\t\t\tif(figure && figure.color == this.color) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//if the figure is selected and block check go to next field\n\t\t\tif (this.selected == true && this.isKingInCheck(pos)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//Add the position to the possible moves\n\t\t\tmoves.push(pos);\n\t\t\t//there is a figure and the color is not the same as the current one\n\t\t\tif (figure && figure.color != this.color) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn moves;\n\t}\n\n\t/**\n\t * Check if the figure can move the the specified position\n\t *\n\t * @param {Object} pos\n\t * @return {Boolean}\n\t */\n\tcanMoveThere(pos) {\n\t\tlet figure = this.game.figureAt(pos);\n\t\tif (\n\t\t\t(!figure || figure.color != this.color) &&\n\t\t\t//is the figure on board\n\t\t\tthis.isOnBoard(pos) &&\n\t\t\t(\n\t\t\t\tthis.selected == false ||\n\t\t\t\t(\n\t\t\t\t\tthis.selected == true &&\n\t\t\t\t\t!this.isKingInCheck(pos)\n\t\t\t\t)\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * function which check if the figure which is intended to move is in a\n\t * place preventing check\n\t *\n\t * @param {Object} pos\n\t * @return {Boolean}\n\t */\n\tisKingInCheck(pos) {\n\t\tlet isInCheck = false;\n\t\t//Move the figure from the pos and set it to -1,-1\n\t\t//so it doesn't bother when we check\n\t\tlet opposite_figure = this.game.figureAt(pos);\n\t\tif (opposite_figure) {\n\t\t\topposite_figure.pos = {x: -1, y: -1};\n\t\t}\n\t\t//store the original figure position and change the position of the\n\t\t//figure to position to check\n\t\tlet originalPosition = this.pos;\n\t\tthis.pos = pos;\n\t\t//find the same color king\n\t\tisInCheck = this.game.figureByType(this.color, 'king').isInCheck();\n\t\t//revert to original position and return opposite figure back\n\t\tthis.pos = originalPosition;\n\t\tif (opposite_figure) {\n\t\t\topposite_figure.pos = pos;\n\t\t}\n\n\t\treturn isInCheck;\n\t}\n\n\t/**\n\t * Check if the position is not outside of the board\n\t *\n\t * @param  {Object} pos\n\t * @return {Boolean}\n\t */\n\tisOnBoard(pos) {\n\t\tif (pos.x >= 0 && pos.x <=7 && pos.y >= 0 && pos.y <= 7) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * return opposite color of the color provided\n\t *\n\t * @return {String}\n\t */\n\tgetOppositeColor() {\n\t\treturn this.color == 'white' ? 'black' : 'white';\n\t}\n\n\t/**\n\t * Function which accept position on the field like c4 and convert it to pos object\n\t *\n\t * @param  {String} field\n\t * @return {[type]}       [description]\n\t */\n\tmoveOn(field) {\n\t\treturn this.move(this.game.convertPosition(field));\n\t}\n}\n\nexport default Figure;","\"use strict\";\n\nimport King from './king.js';\nimport Queen from './queen.js';\nimport Bishop from './bishop.js';\nimport Knight from './knight.js';\nimport Rook from './rook.js';\nimport Pawn from './pawn.js';\nimport History from './history.js';\n\n/**\n * The class responsible for the game containing figures\n * and their moves on the board\n */\nclass Game {\n\t/**\n\t * Direction determine how to draw pieces on the board\n\t * if \"1\" - white at the bottom, black at the top\n\t * if \"-1\" - opposite\n\t * @type {Number}\n\t */\n\tdirection = 1;\n\n\t/**\n\t * Determine which figures could be selected.\n\t * if \"any\" (default) the user could select any figure and make a move\n\t * if \"user\" the user could select figures at the bottom of the board\n\t * the top figures could be moves by a script\n\t *\n\t * @type {String} could be \"any\" or \"user\"\n\t */\n\tmode = 'any';\n\n\t/**\n\t * keep log of the moves in the game\n\t *\n\t * @type {Object}\n\t */\n\thistory = {};\n\n\t/**\n\t * figures on the board\n\t * @type {Array}\n\t */\n\tfigures = [];\n\n\t/**\n\t * order of the colors\n\t * @type {Array}\n\t */\n\tcolors = [];\n\n\t/**\n\t * Hold which piece on the board is selected\n\t * @type {Object}\n\t */\n\tselected;\n\n\t/**\n\t * Game score\n\t * @type {Object}\n\t */\n\tscore = {'white': 0, 'black': 0};\n\n\t/**\n\t * Class constructor\n\t *\n\t * @param  {Number} direction\n\t */\n\tconstructor(direction = 1) {\n\t\tthis.direction = direction;\n\t\tthis.colors = (this.direction > 0) ?\n\t\t\t['white', 'black'] :\n\t\t\t['black', 'white'];\n\t\tthis.history = new History(this);\n\t\tthis.setFigures();\n\t}\n\n\t/**\n\t * Set figures on the board\n\t */\n\tsetFigures() {\n\t\tlet pos = 7;\n\t\tlet pawns = 6;\n\t\tfor (let c in this.colors) {\n\t\t\tif (c % 2) {\n\t\t\t\tpos = 0;\n\t\t\t\tpawns = 1;\n\t\t\t}\n\t\t\tthis.figures.push(new King(this.colors[c], {x: 4, y: pos}, this));\n\t\t\tthis.figures.push(new Queen(this.colors[c], {x: 3, y: pos}, this));\n\t\t\tthis.figures.push(new Bishop(this.colors[c], {x: 2, y: pos}, this));\n\t\t\tthis.figures.push(new Bishop(this.colors[c], {x: 5, y: pos}, this));\n\t\t\tthis.figures.push(new Knight(this.colors[c], {x: 1, y: pos}, this));\n\t\t\tthis.figures.push(new Knight(this.colors[c], {x: 6, y: pos}, this));\n\t\t\tthis.figures.push(new Rook(this.colors[c], {x: 0, y: pos}, this));\n\t\t\tthis.figures.push(new Rook(this.colors[c], {x: 7, y: pos}, this));\n\t\t\t//Draw pawns\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tthis.figures.push(new Pawn(this.colors[c], {x: i, y: pawns}, this));\n\t\t\t}\n\t\t}\n\t\t//Store the initial state of the board\n\t\tthis.history.store();\n\t}\n\n\t/**\n\t * find figure by provided position\n\t *\n\t * @param  {Object} pos\n\t * @return {Object} Figure at the position\n\t */\n\tfigureAt(pos) {\n\t\treturn this.figures.filter(function(figure) {\n\t\t\tif (figure.pos.x == pos.x && figure.pos.y == pos.y) {\n\t\t\t\treturn figure;\n\t\t\t}\n\t\t})[0];\n\t}\n\n\t/**\n\t * Convert check position to coordinate\n\t * e.g. a2 is {x: 7, y: 1}\n\t *\n\t * @param  {String} field\n\t * @return {Object}\n\t */\n\tconvertPosition(field) {\n\t\tlet pos = {x: null, y: null};\n\t\tif (field.length != 2) {\n\t\t\treturn false;\n\t\t}\n\t\tlet chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\t\tif (this.direction < 0) {\n\t\t\tpos.x = 7 - chars.indexOf(field.charAt(0));\n\t\t\tpos.y = Number(field.charAt(1)) - 1;\n\t\t} else {\n\t\t\tpos.x = chars.indexOf(field.charAt(0));\n\t\t\tpos.y = 8 - Number(field.charAt(1)) - 1;\n\t\t}\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Check whether the position pos is empty\n\t *\n\t * @param  {Object} pos\n\t * @return {Boolean}     [description]\n\t */\n\tisEmpty(pos) {\n\t\treturn !this.figureAt(pos) ? true : false;\n\t}\n\n\t/**\n\t * Find figure by color and type.\n\t * it's useful for single figure e.g. king or queen\n\t *\n\t * @param  {String} color\n\t * @param  {string} figureType\n\t * @return {Object}\n\t */\n\tfigureByType(color, figureType) {\n\t\treturn this.figuresByType(color, figureType).pop();\n\t}\n\n\t/**\n\t * Find all figure by color and type.\n\t * it's useful to find all figures by given criterias\n\t *\n\t * @param  {String} color\n\t * @param  {string} figureClass\n\t * @return {Object}\n\t */\n\tfiguresByType(color, figureClass = null) {\n\t\treturn this.figures.filter(function(figure) {\n\t\t\tif (figure.color != color) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (figureClass != null && figure.sign != figureClass) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn figure;\n\t\t});\n\t}\n\n\t/**\n\t * Check if the figure can be moved\n\t *\n\t * @param  {String} color\n\t * @return {Boolean}\n\t */\n\tcanMove(color) {\n\t\t//if figure color is the same as the turn color\n\t\treturn (color == this.history.getTurnColor());\n\t}\n\n\t/**\n\t * set which position is selected\n\t *\n\t * @param  {Object} pos\n\t */\n\tselect(pos) {\n\t\tif (!pos) {\n\t\t\treturn false;\n\t\t}\n\t\t//unselect previous figures\n\t\tthis.figures.forEach(function(figure) {\n\t\t\tfigure.selected = false;\n\t\t});\n\t\tlet figure = this.figureAt(pos);\n\t\tif (!figure) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.canSelect(figure.color) || !this.canMove(figure.color)) {\n\t\t\treturn false;\n\t\t}\n\t\tfigure.selected = true;\n\t\tthis.selected = figure;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Determine of the user can select the figure.\n\t * This is determined by the game mode.\n\t * If the mode is 'user' then the user could select only the figures\n\t * at the bottom of the screen\n\t * If the mode is 'any' then the user could select both colors \n\t * (over the board)\n\t *\n\t * @param  {String} color\n\t * @return {Boolean}\n\t */\n\tcanSelect(color) {\n\t\t//if it's both doesn't matter what the user can select\n\t\tif (this.mode == 'any') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.direction == 1 && color == 'white') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.direction == -1 && color == 'black') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * The function which will make the move from X to Y field\n\t *\n\t * @param  {Object} pos\n\t */\n\tmove(pos) {\n\t\tif (!this.selected || !this.selected.canMoveTo(pos)) {\n\t\t\treturn false;\n\t\t}\n\t\tlet initialPos = this.selected.pos;\n\t\tthis.selected.moved(pos);\n\t\t//update history\n\t\tthis.history.store(initialPos, pos);\n\t\tthis.selected = null;\n\t\treturn true;\n\t}\n\n\t/**\n\t * The figure has been taken from the board\n\t *\n\t * @param  {Object} figure\n\t */\n\tdelete(figure) {\n\t\tlet figures = [];\n\t\tthis.figures.forEach(function(fig) {\n\t\t\tif (fig.pos.x != figure.pos.x || fig.pos.y != figure.pos.y) {\n\t\t\t\tfigures.push(fig);\n\t\t\t}\n\t\t});\n\t\tthis.figures = figures;\n\t}\n\n\t/**\n\t * Handle the game over functionality. Usually this should show a popup\n\t * with message. Game over and restart\n\t *\n\t * @return {[type]} [description]\n\t */\n\tgameOver() {\n\t\tif (!this.history.isOnLastPosition()) {\n\t\t\treturn false;\n\t\t}\n\t\tlet isGameOver = false;\n\t\tlet king = this.figureByType(this.history.getTurnColor(), 'king');\n\t\tif (king.isInCheck() && king.moves().length == 0 && !king.canBeProtected()) {\n\t\t\tthrow king.getOppositeColor() + ' wins';\n\t\t\t//return true;\n\t\t}\n\t\t//stalemate\n\t\tif (king.moves().length == 0 && !king.canBeProtected()) {\n\t\t\tthrow 'The game is draw';\n\t\t\t//return true;\n\t\t}\n\t\t//quirk - only 2 kings left\n\t\tif (this.figures.length == 2) {\n\t\t\tthrow 'The game is draw';\n\t\t\t//return true;\n\t\t}\n\t\t//quirk - the history repeats\n\t\tif (this.history.isRepeating()) {\n\t\t\tthrow 'The game is draw';\n\t\t\t//return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tclickedOnBoard(pos) {\n\t\tif (!pos) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.selected) {\n\t\t\tthis.select(pos);\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tthis.selected &&\n\t\t\tthis.figureAt(pos) &&\n\t\t\tthis.selected.color == this.figureAt(pos).color\n\t\t) {\n\t\t\tthis.select(pos);\n\t\t\treturn;\n\t\t}\n\t\tthis.move(pos);\n\t}\n\n\t/**\n\t * Get figure on the board based on the letters\n\t * @param  {String} pos position based on letter and number e.g. \"c1\"\n\t * @return {Figure}\n\t */\n\tfigureOn(field) {\n\t\treturn this.figureAt(this.convertPosition(field));\n\t}\n\n\t/**\n\t * Get figures by given color\n\t * @param  {String} color\n\t * @return {Array}\n\t */\n\tgetFigures(color) {\n\t\tlet figures = [];\n\t\treturn this.figures.filter(function(figure) {\n\t\t\tif (figure.color == color) {\n\t\t\t\treturn figure;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Get the color which could move\n\t *\n\t * @param  {String} color\n\t * @return {Boolean}\n\t */\n\twhosTurn() {\n\t\treturn this.history.getTurnColor();\n\t}\n\n\t/**\n\t * Lock the game so only the user with figures at the bottom can move\n\t * @return {Game}\n\t */\n\tlock() {\n\t\tthis.mode = 'user';\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unlock the game mode so anyone (at least the computer can move)\n\t * @return {Game}\n\t */\n\tunlock() {\n\t\tthis.mode = 'any';\n\t\treturn this;\n\t}\n}\n\nexport default Game;","\"use strict\";\n\nclass History {\n\t/**\n\t * game position which hold backward-forward in history\n\t * @type {Number}\n\t */\n\tposition = 0;\n\n\t/**\n\t * Array of game moves\n\t * @type {Array}\n\t */\n\tmoves = [];\n\n\t/**\n\t * Game object instance\n\t * @type {Object}\n\t */\n\tgame;\n\n\t/**\n\t * Class constructor\n\t *\n\t * @param  {Object} game\n\t */\n\tconstructor(game) {\n\t\tthis.game = game;\n\t}\n\n\t/**\n\t * Clone provided array of figures\n\t *\n\t * @param  {Array} figures\n\t * @return {Array}\n\t */\n\tcloneFigures(figures) {\n\t\tlet f = [];\n\t\tfigures.forEach((function(figure) {\n\t\t\tf.push(figure.clone());\n\t\t}).bind(this));\n\t\treturn f;\n\t}\n\n\t/**\n\t * Backward in history\n\t *\n\t * @return {Boolean}\n\t */\n\tback() {\n\t\t//there is backward moves\n\t\tlet direction = this.position - 1;\n\t\tif (typeof this.moves[direction] == 'undefined') {\n\t\t\treturn false;\n\t\t}\n\t\t//Set game figures to the history.move\n\t\tthis.game.figures = this.cloneFigures(\n\t\t\tthis.moves[direction].figures\n\t\t);\n\t\tthis.position--;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Check whether there is a back move\n\t *\n\t * @return {Boolean}\n\t */\n\thasBack() {\n\t\treturn this.position > 0;\n\t}\n\n\t/**\n\t * Forward in history\n\t *\n\t * @return {Boolean}\n\t */\n\tforward() {\n\t\t//there is forward moves\n\t\tlet direction = this.position + 1;\n\t\tif (typeof this.moves[direction] == 'undefined') {\n\t\t\treturn false;\n\t\t}\n\t\tthis.game.figures = this.cloneFigures(this.moves[direction].figures);\n\t\tthis.position++;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Check whether there is a forward move\n\t *\n\t * @return {Boolean}\n\t */\n\thasForward() {\n\t\treturn this.position < this.moves.length - 1;\n\t}\n\n\t/**\n\t * Store move in history\n\t *\n\t * @param  {Object} from\n\t * @param  {Object} to\n\t */\n\tstore(from, to) {\n\t\t//reset the position in history\n\t\t//so if the game is in certain position we remove any future moves\n\t\t//and reset the moves from that place\n\t\tif (this.position < this.moves.length - 1) {\n\t\t\tthis.moves = this.moves.slice(0, this.position + 1);\n\t\t}\n\t\t//add figues\n\t\tlet figures = this.cloneFigures(this.game.figures);\n\t\tlet figure = (this.game.selected ? this.game.selected.clone() : null);\n\t\tthis.moves.push({\n\t\t\t'figure': figure,\n\t\t\t'figures': figures,\n\t\t\t'from': (from ? {x: from.x, y: from.y} : null),\n\t\t\t'to': (to ? {x: to.x, y: to.y} : null)\n\t\t});\n\t\t//update position\n\t\tthis.position = this.moves.length - 1;\n\t}\n\n\t/**\n\t * Get move from the history\n\t *\n\t * @param  {Number} index\n\t * @return {Object}\n\t */\n\tgetMove(index = -1) {\n\t\t//if it's negative, use it backwards\n\t\tindex = (index < 0) ? (this.moves.length + index) : index;\n\t\t//if there is such node\n\t\tif (!this.moves[index]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.moves[index];\n\t}\n\n\t/**\n\t * Return which turn is it\n\t *\n\t * @return {[type]} [description]\n\t */\n\tgetTurnColor() {\n\t\tlet dir = (this.game.direction > 0 ? 0 : 1);\n\t\tlet index = Math.abs(((this.position) % 2) - dir);\n\t\treturn this.game.colors[index];\n\t}\n\n\t/**\n\t * function which check if the oponents repeat themselves\n\t * e.g. stalemate\n\t *\n\t * @return {Boolean} [description]\n\t */\n\tisRepeating() {\n\t\tlet repeating = 3;\n\t\tlet lastMove = this.moves[this.moves.length - 1];\n\t\tlet rep = 0;\n\t\tfor (let i = 1; i <= this.moves.length; i = i + 4) {\n\t\t\tif (i <= 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t//check if there is to position (initial one is not set)\n\t\t\t\tthis.moves[this.moves.length - i].to &&\n\t\t\t\t//check x\n\t\t\t\tlastMove.to.x == this.moves[this.moves.length - i].to.x &&\n\t\t\t\t//check y\n\t\t\t\tlastMove.to.y == this.moves[this.moves.length - i].to.y\n\t\t\t) {\n\t\t\t\trep++;\n\t\t\t}\n\t\t\tif (rep == repeating) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * check if the history position is on the last move\n\t * this is used to determine if we should call the game over or not\n\t * @return {Boolean}\n\t */\n\tisOnLastPosition() {\n\t\treturn (this.position == this.moves.length - 1) ? true : false;\n\t}\n}\n\nexport default History;","\"use strict\";\n\nimport Figure from './figure.js';\n\nclass King extends Figure {\n\tsign = 'king';\n\tmoveLength = 1;\n\tfirst_move = true;\n\n\t/**\n\t * Possible moves of the king\n\t *\n\t * @return {Array}\n\t */\n\tmoves() {\n\t\tlet moves = [];\n\t\tmoves = moves.concat(this.getMoves(1, 1));\n\t\tmoves = moves.concat(this.getMoves(1, -1));\n\t\tmoves = moves.concat(this.getMoves(-1, 1));\n\t\tmoves = moves.concat(this.getMoves(-1, -1));\n\t\tmoves = moves.concat(this.getMoves(0, 1));\n\t\tmoves = moves.concat(this.getMoves(0, -1));\n\t\tmoves = moves.concat(this.getMoves(1, 0));\n\t\tmoves = moves.concat(this.getMoves(-1, 0));\n\t\t//Also add castle moves\n\t\tmoves = moves.concat(this.canCastle());\n\t\treturn moves;\n\t}\n\n\t/**\n\t * rewriting the function as the kings can't be next to each other\n\t * nor move to a field which is in check\n\t *\n\t * @param  {Number} h could be -1, 0 or 1\n\t * @param  {[type]} v could be -1, 0 or 1\n\t * @return {Array}\n\t */\n\tgetMoves(h, v) {\n\t\t//find the moves in the direction (it's one move actually)\n\t\tlet moves = super.getMoves(h, v);\n\n\t\t//no possible moves in that direction\n\t\tif (!moves.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\t//is close to the opponent king.\n\t\t//We check against the first move as the king has only one\n\t\tif (this.isCloseToOpponent(moves[0])) {\n\t\t\treturn [];\n\t\t}\n\n\t\t//Is the figure in check\n\t\t//We check against the first move as the king has only one\n\t\tif (this.isInCheck(moves[0])) {\n\t\t\treturn [];\n\t\t}\n\t\treturn moves;\n\t}\n\n\t/**\n\t * Check whether the other king is close\n\t * kings can't be next to each other on the field\n\t *\n\t * @param {Object} pos\n\t * @return {Boolean}\n\t */\n\tisCloseToOpponent(pos) {\n\t\tlet o = this.game.figureByType(this.getOppositeColor(), 'king');\n\t\t//position x and position y are near to other king\n\t\tif (Math.abs(o.pos.x - pos.x) <= 1 && Math.abs(o.pos.y - pos.y) <= 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * check if the king could move on the selected field\n\t * if pos is not provided, use the current figure's position\n\t *\n\t * @param  {Object} pos\n\t * @return {Boolean}\n\t */\n\tisInCheck(pos) {\n\t\tlet isInCheck = false;\n\t\t//store original figure position\n\t\tlet originalPosition = this.pos;\n\t\tlet opposite_figure;\n\t\t//if position is provided to the function\n\t\tif (pos) {\n\t\t\t//find the figure on the checked position and set it\n\t\t\t//outside of the board\n\t\t\topposite_figure = this.game.figureAt(pos);\n\t\t\tif (opposite_figure) {\n\t\t\t\topposite_figure.pos = {x: -1, y: -1};\n\t\t\t}\n\t\t}\n\t\t//if no position is provided use the current's figure position\n\t\tpos = pos || this.pos;\n\t\tthis.pos = pos;\n\t\tlet figures = this.game.figures;\n\t\tfigures.forEach((function(figure) {\n\t\t\tif (\n\t\t\t\tthis.color != figure.color &&\n\t\t\t\t!(figure instanceof King) &&\n\t\t\t\tfigure.canMoveTo(pos)\n\t\t\t) {\n\t\t\t\tisInCheck = true;\n\t\t\t}\n\t\t}).bind(this));\n\t\t//revert original positions\n\t\tthis.pos = originalPosition;\n\t\tif (opposite_figure) {\n\t\t\topposite_figure.pos = pos;\n\t\t}\n\t\treturn isInCheck;\n\t}\n\n\t/**\n\t * Event handler\n\t *\n\t * @param  {Object} pos\n\t */\n\tmoved(pos) {\n\t\tthis.castle(pos);\n\t\tthis.first_move = false;\n\t\tsuper.moved(pos);\n\t}\n\n\t/**\n\t * Check whether the king can make castle\n\t *\n\t * @return {Boolean}\n\t */\n\tcanCastle() {\n\t\tlet moves = [];\n\t\t//king is moved already so can't castle\n\t\tif (!this.first_move) {\n\t\t\treturn [];\n\t\t}\n\t\tlet rook;\n\n\t\t//rook on the left\n\t\trook = this.game.figureAt({x: 0, y: this.pos.y});\n\t\tif (\n\t\t\trook &&\n\t\t\trook.first_move == true &&\n\t\t\t//check if there is any figure in the spaces between rook and the king\n\t\t\tthis.game.isEmpty({x: rook.pos.x + 1, y: rook.pos.y}) &&\n\t\t\tthis.game.isEmpty({x: rook.pos.x + 2, y: rook.pos.y}) &&\n\t\t\tthis.game.isEmpty({x: rook.pos.x + 3, y: rook.pos.y}) &&\n\t\t\t//check those positions are in check\n\t\t\t!this.isInCheck({x: rook.pos.x + 1, y: rook.pos.y}) &&\n\t\t\t!this.isInCheck({x: rook.pos.x + 2, y: rook.pos.y}) &&\n\t\t\t!this.isInCheck({x: rook.pos.x + 3, y: rook.pos.y})\n\t\t) {\n\t\t\tmoves.push({x: this.pos.x - 2, y: this.pos.y});\n\t\t}\n\n\t\t//rook on the right\n\t\trook = this.game.figureAt({x: 7, y: this.pos.y});\n\t\tif (\n\t\t\trook &&\n\t\t\trook.first_move == true &&\n\t\t\t//check if there is any figure in the spaces between rook and the king\n\t\t\tthis.game.isEmpty({x: rook.pos.x - 1, y: rook.pos.y}) &&\n\t\t\tthis.game.isEmpty({x: rook.pos.x - 2, y: rook.pos.y}) &&\n\t\t\t//check those positions are in check\n\t\t\t!this.isInCheck({x: rook.pos.x - 1, y: rook.pos.y}) &&\n\t\t\t!this.isInCheck({x: rook.pos.x - 2, y: rook.pos.y})\n\t\t) {\n\t\t\tmoves.push({x: this.pos.x + 2, y: this.pos.y});\n\t\t}\n\t\treturn moves;\n\t}\n\n\t/**\n\t * actual castle action\n\t *\n\t * @param  {Object} pos\n\t */\n\tcastle(pos) {\n\t\t//the king doesn't move 2 positions so no castle\n\t\tif (Math.abs(this.pos.x - pos.x) != 2) {\n\t\t\treturn;\n\t\t}\n\t\t//check which direction the king moved left or right\n\t\tif (pos.x > this.pos.x) {\n\t\t\t//Rook\n\t\t\tthis.game.figureAt(\n\t\t\t\t{x: 7, y: this.pos.y}\n\t\t\t).pos = {x: pos.x - 1, y: this.pos.y};\n\t\t} else {\n\t\t\t//Rook\n\t\t\tthis.game.figureAt(\n\t\t\t\t{x: 0, y: this.pos.y}\n\t\t\t).pos = {x: pos.x + 1, y: this.pos.y};\n\t\t}\n\t}\n\n\t/**\n\t * Check whether the king can be protected by any figure\n\t *\n\t * @return {Boolean}\n\t */\n\tcanBeProtected() {\n\t\tlet king = this;\n\t\tlet isProtected = false;\n\t\tlet figures = this.game.figures;\n\t\t//Check all figures of the same color if they have any moves\n\t\tfigures.forEach((function(figure) {\n\t\t\tfigure.selected = true;\n\t\t\tif (\n\t\t\t\tfigure != king &&\n\t\t\t\tthis.color == figure.color &&\n\t\t\t\tfigure.moves().length > 0\n\t\t\t) {\n\t\t\t\tisProtected = true;\n\t\t\t}\n\t\t\tfigure.selected = false;\n\t\t}).bind(this));\n\n\t\t//Because we reset all selected this will make the currently\n\t\t//selected figure selected again\n\t\tif (this.game.selected) {\n\t\t\tthis.game.selected.selected = true;\n\t\t}\n\t\treturn isProtected;\n\t}\n\n\t/**\n\t * cloning figure and having first move copied as well\n\t *\n\t * @return {Object}\n\t */\n\tclone() {\n\t\tlet figure = super.clone();\n\t\tfigure.first_move = this.first_move;\n\t\treturn figure;\n\t}\n}\n\nexport default King;","\"use strict\";\n\nimport Figure from './figure.js';\n\nclass Knight extends Figure {\n\tsign = 'knight';\n\tpoints = 3;\n\tmoveLength = 1;\n\n\t/**\n\t * Figure moves\n\t *\n\t * @return {Array}\n\t */\n\tmoves() {\n\t\tlet moves = [];\n\t\tmoves = moves.concat(this.getMoves(1, 0));\n\t\tmoves = moves.concat(this.getMoves(-1, 0));\n\t\tmoves = moves.concat(this.getMoves(0, 1));\n\t\tmoves = moves.concat(this.getMoves(0, -1));\n\t\treturn moves;\n\t}\n\n\t/**\n\t * rewriting the function as knights has very specific move\n\t *\n\t * @param  {Number} h could be -1, 0 or 1\n\t * @param  {Number} v could be -1, 0 or 1\n\t * @return {Array}\n\t */\n\tgetMoves(h, v) {\n\t\tlet moves = [];\n\t\tlet pos;\n\t\tlet figure;\n\t\tlet i = 2;\n\t\tlet j = 1;\n\t\t//on one site\n\t\tpos = {\n\t\t\tx: this.pos.x + h * i + j * v,\n\t\t\ty: this.pos.y + v * i + j * h\n\t\t};\n\t\tif (this.canMoveThere(pos)) {\n\t\t\tmoves.push(pos);\n\t\t}\n\t\t//on another side\n\t\tpos = {\n\t\t\tx: this.pos.x + h * i + (-1 * j * v),\n\t\t\ty: this.pos.y + v * i + (-1 * j * h)\n\t\t};\n\t\tif (this.canMoveThere(pos)) {\n\t\t\tmoves.push(pos);\n\t\t}\n\t\treturn moves;\n\t}\n}\n\nexport default Knight;","\"use strict\";\n\nimport Game from './game.js';\nimport Board from './board.js';\n\n/**\n * Define images\n * @type {Object}\n */\nlet pp = new p5(function (p5) {\n\t/**\n\t * Chess board\n\t * @type {Board}\n\t */\n\tlet board;\n\n\t/**\n\t * what is the direction (white below is 1, black below is -1)\n\t * @type {Number}\n\t */\n\tlet direction = Number(attr('direction', 1));\n\n\t/**\n\t * How to handle moves. If mode is:\n\t * any - the user could move white or black no matter\n\t * where they are placed (direction)\n\t * user - if mode is user, then the user could move only figures\n\t * at the bottom of the board\n\t *\n\t * @type {String}\n\t */\n\tlet mode = attr('mode', 'any');\n\n\t/**\n\t * Theme - colors and sizes\n\t * @type {Object}\n\t */\n\tconst theme = {\n\t\t//board offset from the border in px\n\t\toffset: Number(attr('offset', 50)),\n\t\t//background color arround the board\n\t\tbackground: attr('background', 150),\n\t\t//tile settings\n\t\ttiles: {\n\t\t\t//black tile color\n\t\t\tblack: attr('tiles-black-color', 51),\n\t\t\t//white tile color\n\t\t\twhite: attr('tiles-white-color', 255),\n\t\t\t//width of the tile\n\t\t\twidth: Number(attr('tiles-width', 100)),\n\t\t\t//height of the tile (usually the same as width)\n\t\t\theight: Number(attr('tiles-width', 100)),\n\t\t\tselected: {\n\t\t\t\tbackground: attr('tiles-selected-background', 'green'),\n\t\t\t\tborderColor: attr('tiles-selected-border-color', 'red'),\n\t\t\t\tborderSize: Number(attr('tiles-selected-border-size', 3))\n\t\t\t},\n\t\t\tmoves: {\n\t\t\t\tbackground: attr('tiles-moves-background', 'blue'),\n\t\t\t\tdiameter: Number(attr('tiles-moves-diameter', 20)),\n\t\t\t\t//if the position has figure\n\t\t\t\tfigure: {\n\t\t\t\t\tbackground: attr('tiles-moves-figure-background', 120),\n\t\t\t\t\tdiameter: Number(attr('tiles-moves-figure-diameter', 100))\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tlabels: {\n\t\t\tcolor: attr('labels-color', 255),\n\t\t\tsize: Number(attr('labels-size', 16))\n\t\t},\n\t\t//game over dialog\n\t\tover: {\n\t\t\tbackground: attr('over-background', 'red'),\n\t\t\tcolor: attr('over-color', 'white'),\n\t\t\tsize: Number(attr('over-size', 40)),\n\t\t\treasonSize: Number(attr('over-reason-size', 25))\n\t\t}\n\t}\n\n\t/**\n\t * Preload figures\n\t */\n\tp5.preload = function() {\n\t\tp5.images = {white: {}, black: {}};\n\t\tp5.images.white.king = p5.loadImage('figures/white.king.png');\n\t\tp5.images.white.queen = p5.loadImage('figures/white.queen.png');\n\t\tp5.images.white.bishop = p5.loadImage('figures/white.bishop.png');\n\t\tp5.images.white.knight = p5.loadImage('figures/white.knight.png');\n\t\tp5.images.white.rook = p5.loadImage('figures/white.rook.png');\n\t\tp5.images.white.pawn = p5.loadImage('figures/white.pawn.png');\n\n\t\tp5.images.black.king = p5.loadImage('figures/black.king.png');\n\t\tp5.images.black.queen = p5.loadImage('figures/black.queen.png');\n\t\tp5.images.black.bishop = p5.loadImage('figures/black.bishop.png');\n\t\tp5.images.black.knight = p5.loadImage('figures/black.knight.png');\n\t\tp5.images.black.rook = p5.loadImage('figures/black.rook.png');\n\t\tp5.images.black.pawn = p5.loadImage('figures/black.pawn.png');\n\t}\n\t/**\n\t * set up the canvas + set instance of game and board\n\t */\n    p5.setup = function() {\n    \tlet canvas = p5.createCanvas(\n\t\t\t(theme.tiles.width * 8) + theme.offset * 2,\n\t\t\t(theme.tiles.width * 8) + theme.offset * 2\n\t\t);\n\t\tcanvas.parent('chess');\n\t\tboard = new Board(p5, theme, direction, mode);\n\t\t//Give access to the game  instance to the window object\n\t\twindow.game = board.game;\n\t\t//trigger an event that the game is ready\n\t\twindow.dispatchEvent(new Event('chess.ready'));\n    }\n\n    /**\n\t * Draw the game\n\t */\n    p5.draw = function() {\n    \t//Set refresh frame rate\n    \tp5.frameRate(10);\n    \t//Draw the board\n    \tboard.draw();\n    }\n\n    /**\n     * handle mouse pressed over the board\n     */\n    p5.mousePressed = function() {\n    \t//logic for handling game clicks\n    \tboard.game.clickedOnBoard(board.getPosition());\n    }\n\n    /**\n\t * Fetch attribute from dom game element\n\t *\n\t * @param  {String} attribute - name without prefix 'data-'\n\t * @param  {String} defaultValue\n\t * @return {String}\n\t */\n\tfunction attr(attribute, defaultValue) {\n\t\tlet el = document.getElementById('chess');\n\t\tif (el.getAttribute('data-' + attribute)) {\n\t\t\treturn el.getAttribute('data-' + attribute);\n\t\t} else if (el.getAttribute(attribute)) {\n\t\t\treturn el.getAttribute(attribute);\n\t\t} else {\n\t\t\treturn defaultValue;\n\t\t}\n\t}\n});","\"use strict\";\n\nimport Figure from './figure.js';\n\nclass Pawn extends Figure {\n\tsign = 'pawn';\n\tpoints = 1;\n\tfirst_move = true;\n\n\t/**\n\t * Event listener for the case when the piece has been moved\n\t *\n\t * @param  {Object} pos\n\t */\n\tmoved(pos) {\n\t\tthis.first_move = false;\n\t\tthis.overtaken(pos);\n\t\tsuper.moved(pos);\n\t\tthis.reachEnd();\n\t}\n\n\t/**\n\t * Case where the pawn is overtaken (initial first 2 space move\n\t *\n\t * @param {Object} pos\n\t */\n\tovertaken(pos) {\n\t\tlet figureAtPos = this.game.figureAt(pos);\n\t\tlet dir = this.getDirection();\n\t\tif (\n\t\t\tthis.pos.x == pos.x &&\n\t\t\tthis.game.isEmpty({x: pos.x, y: pos.y + 1 * dir})\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tlet overtaken = this.game.figureAt({x: pos.x, y: pos.y + 1 * dir});\n\t\tif (\n\t\t\ttypeof figureAtPos == 'undefined' &&\n\t\t\tovertaken &&\n\t\t\tovertaken.color != this.color &&\n\t\t\tovertaken.sign == this.sign\n\t\t) {\n\t\t\tthis.game.score[this.color] += overtaken.points;\n\t\t\tthis.game.delete(overtaken);\n\t\t}\n\t}\n\n\t/**\n\t * Reach end of the board (and become a queen)\n\t * TODO: Make the user to select the new figure\n\t */\n\treachEnd() {\n\t\tif (this.pos.y == 0 || this.pos.y == 7) {\n\t\t\tlet color = this.color;\n\t\t\tlet pos = this.pos;\n\t\t\t//Delete the pawn\n\t\t\tthis.game.delete(this);\n\t\t\t//assign a queen on the same place\n\t\t\tthis.game.figures.push(new Queen(color, pos, this.game));\n\t\t}\n\t}\n\n\t/**\n\t * Set direction which pawns will move\n\t * this is unique function as only those figures\n\t * can move only in one direction\n\t *\n\t * @return {Number} 1 or -1\n\t */\n\tgetDirection() {\n\t\tif (this.game.direction > 0) {\n\t\t\tif (this.color == 'white') {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.color == 'white') {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Possible moves of the figure\n\t *\n\t * @return {Array}\n\t */\n\tmoves() {\n\t\tlet moves = [];\n\t\tlet dir = this.getDirection();\n\t\t//single move\n\t\tif (\n\t\t\tthis.game.isEmpty({x: this.pos.x, y: this.pos.y - 1 * dir}) &&\n\t\t\tthis.canMoveThere({x: this.pos.x, y: this.pos.y - 1 * dir})\n\t\t) {\n\t\t\tmoves.push({x: this.pos.x, y: this.pos.y - 1 * dir});\n\t\t}\n\t\t//initial move (2 positions jump)\n\t\tif (\n\t\t\tthis.first_move == true &&\n\t\t\tthis.game.isEmpty({x: this.pos.x, y: this.pos.y - 2 * dir}) &&\n\t\t\tthis.game.isEmpty({x: this.pos.x, y: this.pos.y - 1 * dir}) &&\n\t\t\tthis.canMoveThere({x: this.pos.x, y: this.pos.y - 2 * dir})\n\t\t) {\n\t\t\tmoves.push({x: this.pos.x, y: this.pos.y - 2 * dir});\n\t\t}\n\t\t//attack\n\t\tif (\n\t\t\tthis.canAttack({x: this.pos.x - 1, y: this.pos.y - 1 * dir}) &&\n\t\t\tthis.canMoveThere({x: this.pos.x - 1, y: this.pos.y - 1 * dir})\n\t\t) {\n\t\t\tmoves.push({x: this.pos.x - 1, y: this.pos.y - 1 * dir});\n\t\t}\n\t\tif (\n\t\t\tthis.canAttack({x: this.pos.x + 1, y: this.pos.y - 1 * dir}) &&\n\t\t\tthis.canMoveThere({x: this.pos.x + 1, y: this.pos.y - 1 * dir})\n\t\t) {\n\t\t\tmoves.push({x: this.pos.x + 1, y: this.pos.y - 1 * dir});\n\t\t}\n\t\t//special case when the previous move is pawn and has moved 2 places\n\t\tlet lastMove = this.game.history.getMove();\n\t\tif (\n\t\t\tlastMove &&\n\t\t\tlastMove.figure instanceof Pawn &&\n\t\t\t(\n\t\t\t\t//check if previous move has 2 fields\n\t\t\t\tMath.abs(lastMove.from.y - lastMove.to.y) == 2 &&\n\t\t\t\t//check if this happened next to the current figure\n\t\t\t\t(\n\t\t\t\t\tthis.pos.x == lastMove.to.x - 1 ||\n\t\t\t\t\tthis.pos.x == lastMove.to.x + 1\n\t\t\t\t)\n\t\t\t) &&\n\t\t\t//check if the current figure was overtaken by the opposite\n\t\t\tthis.pos.y == lastMove.to.y\n\t\t) {\n\t\t\t//detect on which side to move\n\t\t\tif (this.pos.x == lastMove.to.x - 1) {\n\t\t\t\tmoves.push({x: this.pos.x + 1, y: this.pos.y - 1 * dir});\n\t\t\t} else if (this.pos.x == lastMove.to.x + 1) {\n\t\t\t\tmoves.push({x: this.pos.x - 1, y: this.pos.y - 1 * dir});\n\t\t\t}\n\t\t\t//moves.push(x: this.pos.x)\n\t\t}\n\t\treturn moves;\n\t}\n\n\t/**\n\t * Determine if there are pieces in the specified position pos\n\t *\n\t * @param  {Object} pos\n\t * @return {Boolean}\n\t */\n\tcanAttack(pos) {\n\t\tlet figure = this.game.figureAt(pos);\n\t\tif (figure && figure.color != this.color) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * cloning figure and having first move copied as well\n\t *\n\t * @return {Object}\n\t */\n\tclone() {\n\t\tlet figure = super.clone();\n\t\tfigure.first_move = this.first_move;\n\t\treturn figure;\n\t}\n}\n\nexport default Pawn;","\"use strict\";\n\nimport Figure from './figure.js';\n\nclass Queen extends Figure {\n\tsign = 'queen';\n\tpoints = 9;\n\n\t/**\n\t * Figure moves\n\t *\n\t * @return {Array}\n\t */\n\tmoves() {\n\t\tlet moves = [];\n\t\tmoves = moves.concat(this.getMoves(1, 1));\n\t\tmoves = moves.concat(this.getMoves(1, -1));\n\t\tmoves = moves.concat(this.getMoves(-1, 1));\n\t\tmoves = moves.concat(this.getMoves(-1, -1));\n\t\tmoves = moves.concat(this.getMoves(0, 1));\n\t\tmoves = moves.concat(this.getMoves(0, -1));\n\t\tmoves = moves.concat(this.getMoves(1, 0));\n\t\tmoves = moves.concat(this.getMoves(-1, 0));\n\t\treturn moves;\n\t}\n}\n\nexport default Queen;","\"use strict\";\n\nimport Figure from './figure.js';\n\nclass Rook extends Figure {\n\tsign = 'rook';\n\tpoints = 5;\n\tfirst_move = true;\n\n\t/**\n\t * Event listener\n\t *\n\t * @param  {Object} pos\n\t */\n\tmoved(pos) {\n\t\tthis.first_move = false;\n\t\tsuper.moved(pos);\n\t}\n\n\t/**\n\t * Figure moves\n\t *\n\t * @return {Array}\n\t */\n\tmoves() {\n\t\tlet moves = [];\n\t\tmoves = moves.concat(this.getMoves(0, 1));\n\t\tmoves = moves.concat(this.getMoves(0, -1));\n\t\tmoves = moves.concat(this.getMoves(1, 0));\n\t\tmoves = moves.concat(this.getMoves(-1, 0));\n\t\treturn moves;\n\t}\n\n\t/**\n\t * cloning figure and having first move copied as well\n\t *\n\t * @return {Object}\n\t */\n\tclone() {\n\t\tlet figure = super.clone();\n\t\tfigure.first_move = this.first_move;\n\t\treturn figure;\n\t}\n}\n\nexport default Rook;"],"sourceRoot":""}